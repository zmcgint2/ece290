-- VHDL Entity comparator_lib.signed_2s_complement_8_bit_comparator.symbol
--
-- Created:
--          by - hkiang2.ews (gelib-057-06.ews.illinois.edu)
--          at - 13:43:04 10/19/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY signed_2s_complement_8_bit_comparator IS
   PORT( 
      a0          : IN     std_logic;
      a1          : IN     std_logic;
      a2          : IN     std_logic;
      a3          : IN     std_logic;
      a4          : IN     std_logic;
      a5          : IN     std_logic;
      a6          : IN     std_logic;
      b0          : IN     std_logic;
      b1          : IN     std_logic;
      b2          : IN     std_logic;
      b3          : IN     std_logic;
      b4          : IN     std_logic;
      b5          : IN     std_logic;
      b6          : IN     std_logic;
      signbit_a   : IN     std_logic;
      signbit_b   : IN     std_logic;
      out_equal   : OUT    std_logic;
      out_greater : OUT    std_logic;
      out_less    : OUT    std_logic
   );

-- Declarations

END signed_2s_complement_8_bit_comparator ;

--
-- VHDL Architecture comparator_lib.signed_2s_complement_8_bit_comparator.struct
--
-- Created:
--          by - hkiang2.ews (gelib-057-06.ews.illinois.edu)
--          at - 13:43:04 10/19/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ARCHITECTURE struct OF signed_2s_complement_8_bit_comparator IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL a_equal_b_unsigned   : std_logic;
   SIGNAL a_greater_b_unsigned : std_logic;
   SIGNAL a_less_b_unsigned    : std_logic;
   SIGNAL din0                 : std_logic;
   SIGNAL din1                 : std_logic;
   SIGNAL din2                 : std_logic;
   SIGNAL din5                 : std_logic;
   SIGNAL dout                 : std_logic;
   SIGNAL dout1                : std_logic;
   SIGNAL dout10               : std_logic;
   SIGNAL dout11               : std_logic;
   SIGNAL dout13               : std_logic;
   SIGNAL dout14               : std_logic;
   SIGNAL dout15               : std_logic;
   SIGNAL dout16               : std_logic;
   SIGNAL dout17               : std_logic;
   SIGNAL dout18               : std_logic;
   SIGNAL dout19               : std_logic;
   SIGNAL dout2                : std_logic;
   SIGNAL dout20               : std_logic;
   SIGNAL dout21               : std_logic;
   SIGNAL dout22               : std_logic;
   SIGNAL dout23               : std_logic;
   SIGNAL dout24               : std_logic;
   SIGNAL dout25               : std_logic;
   SIGNAL dout26               : std_logic;
   SIGNAL dout27               : std_logic;
   SIGNAL dout28               : std_logic;
   SIGNAL dout3                : std_logic;
   SIGNAL dout35               : std_logic;
   SIGNAL dout36               : std_logic;
   SIGNAL dout4                : std_logic;
   SIGNAL dout5                : std_logic;
   SIGNAL dout6                : std_logic;
   SIGNAL dout7                : std_logic;
   SIGNAL dout8                : std_logic;
   SIGNAL dout9                : std_logic;
   SIGNAL ena3                 : std_logic;
   SIGNAL x1                   : std_logic;
   SIGNAL x2                   : std_logic;
   SIGNAL x3                   : std_logic;
   SIGNAL x4                   : std_logic;
   SIGNAL x5                   : std_logic;
   SIGNAL x6                   : std_logic;

   -- Implicit buffer signal declarations
   SIGNAL out_equal_internal : std_logic;
   SIGNAL out_less_internal  : std_logic;



BEGIN

   -- ModuleWare code(v1.9) for instance 'U_2' of 'and'
   a_less_b_unsigned <= dout16 AND dout20;

   -- ModuleWare code(v1.9) for instance 'U_7' of 'and'
   out_greater <= dout35 AND dout36;

   -- ModuleWare code(v1.9) for instance 'U_8' of 'and'
   dout28 <= dout14 AND a_less_b_unsigned AND din2;

   -- ModuleWare code(v1.9) for instance 'U_9' of 'and'
   dout13 <= a0 AND dout5;

   -- ModuleWare code(v1.9) for instance 'U_12' of 'and'
   dout15 <= a1 AND dout6;

   -- ModuleWare code(v1.9) for instance 'U_14' of 'and'
   ena3 <= a2 AND dout7;

   -- ModuleWare code(v1.9) for instance 'U_16' of 'and'
   dout17 <= a3 AND dout8;

   -- ModuleWare code(v1.9) for instance 'U_18' of 'and'
   dout18 <= a4 AND dout9;

   -- ModuleWare code(v1.9) for instance 'U_20' of 'and'
   dout19 <= a5 AND dout10;

   -- ModuleWare code(v1.9) for instance 'U_22' of 'and'
   dout21 <= a6 AND dout11;

   -- ModuleWare code(v1.9) for instance 'U_23' of 'and'
   dout22 <= signbit_b AND signbit_a AND a_greater_b_unsigned;

   -- ModuleWare code(v1.9) for instance 'U_26' of 'and'
   a_equal_b_unsigned <= din0 AND dout;

   -- ModuleWare code(v1.9) for instance 'U_27' of 'and'
   out_equal_internal <= din1 AND a_equal_b_unsigned;

   -- ModuleWare code(v1.9) for instance 'U_33' of 'and'
   din0 <= x6 AND x5 AND x4 AND x3 AND x2 AND x1;

   -- ModuleWare code(v1.9) for instance 'U_35' of 'and'
   dout1 <= x2 AND x3 AND x4 AND x5 AND x6;

   -- ModuleWare code(v1.9) for instance 'U_37' of 'and'
   dout2 <= x3 AND x4 AND x5 AND x6;

   -- ModuleWare code(v1.9) for instance 'U_39' of 'and'
   dout3 <= x6 AND x5 AND x4;

   -- ModuleWare code(v1.9) for instance 'U_41' of 'and'
   dout4 <= x6 AND x5;

   -- ModuleWare code(v1.9) for instance 'U_34' of 'and1'
   dout23 <= dout13 AND din0;

   -- ModuleWare code(v1.9) for instance 'U_36' of 'and1'
   dout24 <= dout15 AND dout1;

   -- ModuleWare code(v1.9) for instance 'U_38' of 'and1'
   dout25 <= ena3 AND dout2;

   -- ModuleWare code(v1.9) for instance 'U_40' of 'and1'
   dout26 <= dout17 AND dout3;

   -- ModuleWare code(v1.9) for instance 'U_42' of 'and1'
   dout27 <= dout18 AND dout4;

   -- ModuleWare code(v1.9) for instance 'U_44' of 'and1'
   din5 <= dout19 AND x6;

   -- ModuleWare code(v1.9) for instance 'U_0' of 'inv'
   dout16 <= NOT(a_equal_b_unsigned);

   -- ModuleWare code(v1.9) for instance 'U_1' of 'inv'
   dout20 <= NOT(a_greater_b_unsigned);

   -- ModuleWare code(v1.9) for instance 'U_3' of 'inv'
   dout14 <= NOT(signbit_b);

   -- ModuleWare code(v1.9) for instance 'U_4' of 'inv'
   din2 <= NOT(signbit_a);

   -- ModuleWare code(v1.9) for instance 'U_5' of 'inv'
   dout35 <= NOT(out_equal_internal);

   -- ModuleWare code(v1.9) for instance 'U_6' of 'inv'
   dout36 <= NOT(out_less_internal);

   -- ModuleWare code(v1.9) for instance 'U_10' of 'inv'
   dout5 <= NOT(b0);

   -- ModuleWare code(v1.9) for instance 'U_11' of 'inv'
   dout6 <= NOT(b1);

   -- ModuleWare code(v1.9) for instance 'U_13' of 'inv'
   dout7 <= NOT(b2);

   -- ModuleWare code(v1.9) for instance 'U_15' of 'inv'
   dout8 <= NOT(b3);

   -- ModuleWare code(v1.9) for instance 'U_17' of 'inv'
   dout9 <= NOT(b4);

   -- ModuleWare code(v1.9) for instance 'U_19' of 'inv'
   dout10 <= NOT(b5);

   -- ModuleWare code(v1.9) for instance 'U_21' of 'inv'
   dout11 <= NOT(b6);

   -- ModuleWare code(v1.9) for instance 'U_46' of 'or'
   a_greater_b_unsigned <= dout23 OR dout24 OR dout25 OR dout26 OR dout27
                           OR din5 OR dout21;

   -- ModuleWare code(v1.9) for instance 'U_47' of 'or'
   out_less_internal <= dout28 OR dout22;

   -- ModuleWare code(v1.9) for instance 'U_56' of 'xnor'
   x6 <= NOT(a6 XOR b6);

   -- ModuleWare code(v1.9) for instance 'U_57' of 'xnor'
   x5 <= NOT(a5 XOR b5);

   -- ModuleWare code(v1.9) for instance 'U_58' of 'xnor'
   x4 <= NOT(a4 XOR b4);

   -- ModuleWare code(v1.9) for instance 'U_59' of 'xnor'
   x3 <= NOT(a3 XOR b3);

   -- ModuleWare code(v1.9) for instance 'U_60' of 'xnor'
   x2 <= NOT(a2 XOR b2);

   -- ModuleWare code(v1.9) for instance 'U_61' of 'xnor'
   x1 <= NOT(a1 XOR b1);

   -- ModuleWare code(v1.9) for instance 'U_62' of 'xnor'
   dout <= NOT(a0 XOR b0);

   -- ModuleWare code(v1.9) for instance 'U_63' of 'xnor'
   din1 <= NOT(signbit_a XOR signbit_b);

   -- Instance port mappings.

   -- Implicit buffered output assignments
   out_equal <= out_equal_internal;
   out_less  <= out_less_internal;

END struct;
