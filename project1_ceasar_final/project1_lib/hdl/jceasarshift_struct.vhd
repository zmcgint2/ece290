-- VHDL Entity projectceasar.jceasarshift.symbol
--
-- Created:
--          by - jschen3.ews (dcl-l520-37.ews.illinois.edu)
--          at - 21:49:09 10/24/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY jceasarshift IS
   PORT( 
      a  : IN     std_logic;
      a1 : IN     std_logic;
      a2 : IN     std_logic;
      a3 : IN     std_logic;
      a4 : IN     std_logic;
      b  : IN     std_logic;
      b1 : IN     std_logic;
      b2 : IN     std_logic;
      b3 : IN     std_logic;
      b4 : IN     std_logic;
      b5 : IN     std_logic;
      b6 : IN     std_logic;
      Z0 : OUT    std_logic;
      Z1 : OUT    std_logic;
      Z2 : OUT    std_logic;
      Z3 : OUT    std_logic;
      Z4 : OUT    std_logic;
      Z5 : OUT    std_logic;
      Z6 : OUT    std_logic;
      Z7 : OUT    std_logic
   );

-- Declarations

END jceasarshift ;

--
-- VHDL Architecture projectceasar.jceasarshift.struct
--
-- Created:
--          by - jschen3.ews (dcl-l520-37.ews.illinois.edu)
--          at - 21:49:10 10/24/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY project1_lib;

ARCHITECTURE struct OF jceasarshift IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL B7greaterA7 : std_logic;
   SIGNAL din1        : std_logic;
   SIGNAL dout        : std_logic;
   SIGNAL dout1       : std_logic;
   SIGNAL dout10      : std_logic;
   SIGNAL dout11      : std_logic;
   SIGNAL dout12      : std_logic;
   SIGNAL dout13      : std_logic;
   SIGNAL dout14      : std_logic;
   SIGNAL dout15      : std_logic;
   SIGNAL dout16      : std_logic;
   SIGNAL dout17      : std_logic;
   SIGNAL dout18      : std_logic;
   SIGNAL dout19      : std_logic;
   SIGNAL dout2       : std_logic;
   SIGNAL dout20      : std_logic;
   SIGNAL dout21      : std_logic;
   SIGNAL dout22      : std_logic;
   SIGNAL dout3       : std_logic;
   SIGNAL dout4       : std_logic;
   SIGNAL dout5       : std_logic;
   SIGNAL dout6       : std_logic;
   SIGNAL dout7       : std_logic;
   SIGNAL dout8       : std_logic;
   SIGNAL dout9       : std_logic;
   SIGNAL s           : std_logic;
   SIGNAL s1          : std_logic;
   SIGNAL s10         : std_logic;
   SIGNAL s11         : std_logic;
   SIGNAL s12         : std_logic;
   SIGNAL s13         : std_logic;
   SIGNAL s14         : std_logic;
   SIGNAL s15         : std_logic;
   SIGNAL s16         : std_logic;
   SIGNAL s17         : std_logic;
   SIGNAL s18         : std_logic;
   SIGNAL s19         : std_logic;
   SIGNAL s2          : std_logic;
   SIGNAL s20         : std_logic;
   SIGNAL s21         : std_logic;
   SIGNAL s3          : std_logic;
   SIGNAL s4          : std_logic;
   SIGNAL s5          : std_logic;
   SIGNAL s6          : std_logic;
   SIGNAL s7          : std_logic;
   SIGNAL s8          : std_logic;
   SIGNAL s9          : std_logic;

   -- Implicit buffer signal declarations
   SIGNAL Z1_internal : std_logic;
   SIGNAL Z2_internal : std_logic;
   SIGNAL Z3_internal : std_logic;
   SIGNAL Z4_internal : std_logic;
   SIGNAL Z5_internal : std_logic;
   SIGNAL Z6_internal : std_logic;
   SIGNAL Z7_internal : std_logic;


   -- Component Declarations
   COMPONENT full_adder_8bit
   PORT (
      a    : IN     std_logic ;
      a1   : IN     std_logic ;
      a2   : IN     std_logic ;
      a3   : IN     std_logic ;
      a4   : IN     std_logic ;
      a5   : IN     std_logic ;
      a6   : IN     std_logic ;
      a7   : IN     std_logic ;
      b    : IN     std_logic ;
      b1   : IN     std_logic ;
      b2   : IN     std_logic ;
      b3   : IN     std_logic ;
      b4   : IN     std_logic ;
      b5   : IN     std_logic ;
      b6   : IN     std_logic ;
      b7   : IN     std_logic ;
      cin  : IN     std_logic ;
      cout : OUT    std_logic ;
      s    : OUT    std_logic ;
      s1   : OUT    std_logic ;
      s2   : OUT    std_logic ;
      s3   : OUT    std_logic ;
      s4   : OUT    std_logic ;
      s5   : OUT    std_logic ;
      s6   : OUT    std_logic ;
      s7   : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT j21mux
   PORT (
      S : IN     std_logic ;
      X : IN     std_logic ;
      Y : IN     std_logic ;
      Z : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT j7bitcomparator
   PORT (
      A0          : IN     std_logic ;
      A1          : IN     std_logic ;
      A2          : IN     std_logic ;
      A3          : IN     std_logic ;
      A4          : IN     std_logic ;
      A5          : IN     std_logic ;
      A6          : IN     std_logic ;
      B0          : IN     std_logic ;
      B1          : IN     std_logic ;
      B2          : IN     std_logic ;
      B3          : IN     std_logic ;
      B4          : IN     std_logic ;
      B5          : IN     std_logic ;
      B6          : IN     std_logic ;
      A7equalsB7  : OUT    std_logic ;
      A7greaterB7 : OUT    std_logic ;
      B7greaterA7 : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : full_adder_8bit USE ENTITY project1_lib.full_adder_8bit;
   FOR ALL : j21mux USE ENTITY project1_lib.j21mux;
   FOR ALL : j7bitcomparator USE ENTITY project1_lib.j7bitcomparator;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.9) for instance 'U_4' of 'gnd'
   dout1 <= '0';

   -- ModuleWare code(v1.9) for instance 'U_6' of 'gnd'
   dout2 <= '0';

   -- ModuleWare code(v1.9) for instance 'U_27' of 'gnd'
   dout15 <= '0';

   -- ModuleWare code(v1.9) for instance 'U_28' of 'gnd'
   dout16 <= '0';

   -- ModuleWare code(v1.9) for instance 'U_29' of 'gnd'
   dout17 <= '0';

   -- ModuleWare code(v1.9) for instance 'U_7' of 'inv'
   dout4 <= NOT(a);

   -- ModuleWare code(v1.9) for instance 'U_8' of 'inv'
   dout5 <= NOT(a1);

   -- ModuleWare code(v1.9) for instance 'U_9' of 'inv'
   dout6 <= NOT(a2);

   -- ModuleWare code(v1.9) for instance 'U_10' of 'inv'
   dout7 <= NOT(a3);

   -- ModuleWare code(v1.9) for instance 'U_11' of 'inv'
   dout8 <= NOT(a4);

   -- ModuleWare code(v1.9) for instance 'U_14' of 'inv'
   dout10 <= NOT(s8);

   -- ModuleWare code(v1.9) for instance 'U_15' of 'inv'
   dout11 <= NOT(s9);

   -- ModuleWare code(v1.9) for instance 'U_16' of 'inv'
   dout12 <= NOT(s10);

   -- ModuleWare code(v1.9) for instance 'U_17' of 'inv'
   dout9 <= NOT(s7);

   -- ModuleWare code(v1.9) for instance 'U_18' of 'inv'
   dout13 <= NOT(s11);

   -- ModuleWare code(v1.9) for instance 'U_31' of 'inv'
   dout19 <= NOT(s19);

   -- ModuleWare code(v1.9) for instance 'U_32' of 'inv'
   dout20 <= NOT(s20);

   -- ModuleWare code(v1.9) for instance 'U_33' of 'inv'
   dout21 <= NOT(s21);

   -- ModuleWare code(v1.9) for instance 'U_34' of 'or'
   dout22 <= B7greaterA7 OR din1;

   -- ModuleWare code(v1.9) for instance 'U_26' of 'sxor'
   Z0 <= Z1_internal XOR Z2_internal XOR Z3_internal XOR Z4_internal
         XOR Z5_internal XOR Z6_internal XOR Z7_internal;

   -- ModuleWare code(v1.9) for instance 'U_2' of 'vdd'
   dout <= '1';

   -- ModuleWare code(v1.9) for instance 'U_3' of 'vdd'
   dout3 <= '1';

   -- ModuleWare code(v1.9) for instance 'U_19' of 'vdd'
   dout14 <= '1';

   -- ModuleWare code(v1.9) for instance 'U_30' of 'vdd'
   dout18 <= '1';

   -- Instance port mappings.
   U_0 : full_adder_8bit
      PORT MAP (
         a    => a,
         a1   => a1,
         a2   => a2,
         a3   => a3,
         a4   => a4,
         a5   => dout15,
         a6   => dout15,
         a7   => dout15,
         b    => b,
         b1   => b1,
         b2   => b2,
         b3   => b3,
         b4   => b4,
         b5   => b5,
         b6   => b6,
         b7   => dout15,
         cin  => dout15,
         cout => OPEN,
         s    => s,
         s1   => s1,
         s2   => s2,
         s3   => s3,
         s4   => s4,
         s5   => s5,
         s6   => s6,
         s7   => din1
      );
   U_1 : full_adder_8bit
      PORT MAP (
         a    => dout2,
         a1   => dout3,
         a2   => dout2,
         a3   => dout3,
         a4   => dout3,
         a5   => dout17,
         a6   => dout17,
         a7   => dout17,
         b    => dout4,
         b1   => dout5,
         b2   => dout6,
         b3   => dout7,
         b4   => dout8,
         b5   => dout18,
         b6   => dout18,
         b7   => dout18,
         cin  => dout2,
         cout => OPEN,
         s    => s7,
         s1   => s8,
         s2   => s9,
         s3   => s10,
         s4   => s11,
         s5   => s19,
         s6   => s20,
         s7   => s21
      );
   U_13 : full_adder_8bit
      PORT MAP (
         a    => dout9,
         a1   => dout10,
         a2   => dout11,
         a3   => dout12,
         a4   => dout13,
         a5   => dout19,
         a6   => dout20,
         a7   => dout21,
         b    => b,
         b1   => b1,
         b2   => b2,
         b3   => a4,
         b4   => b4,
         b5   => b5,
         b6   => b6,
         b7   => dout16,
         cin  => dout14,
         cout => OPEN,
         s    => s12,
         s1   => s13,
         s2   => s14,
         s3   => s15,
         s4   => s16,
         s5   => s17,
         s6   => s18,
         s7   => OPEN
      );
   U_12 : j21mux
      PORT MAP (
         S => dout22,
         X => s5,
         Y => s17,
         Z => Z2_internal
      );
   U_20 : j21mux
      PORT MAP (
         S => dout22,
         X => s4,
         Y => s16,
         Z => Z3_internal
      );
   U_21 : j21mux
      PORT MAP (
         S => dout22,
         X => s3,
         Y => s15,
         Z => Z4_internal
      );
   U_22 : j21mux
      PORT MAP (
         S => dout22,
         X => s2,
         Y => s14,
         Z => Z5_internal
      );
   U_23 : j21mux
      PORT MAP (
         S => dout22,
         X => s1,
         Y => s13,
         Z => Z6_internal
      );
   U_24 : j21mux
      PORT MAP (
         S => dout22,
         X => s,
         Y => s12,
         Z => Z7_internal
      );
   U_25 : j21mux
      PORT MAP (
         S => dout22,
         X => s6,
         Y => s18,
         Z => Z1_internal
      );
   U_5 : j7bitcomparator
      PORT MAP (
         A0          => dout1,
         A1          => dout,
         A2          => dout1,
         A3          => dout,
         A4          => dout,
         A5          => dout,
         A6          => dout,
         B0          => s,
         B1          => s1,
         B2          => s2,
         B3          => s3,
         B4          => s4,
         B5          => s5,
         B6          => s6,
         A7equalsB7  => OPEN,
         A7greaterB7 => OPEN,
         B7greaterA7 => B7greaterA7
      );

   -- Implicit buffered output assignments
   Z1 <= Z1_internal;
   Z2 <= Z2_internal;
   Z3 <= Z3_internal;
   Z4 <= Z4_internal;
   Z5 <= Z5_internal;
   Z6 <= Z6_internal;
   Z7 <= Z7_internal;

END struct;
